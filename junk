machine:
  pre:
    - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
  services:
    - docker

dependencies:
  pre:
    - curl -L https://github.com/docker/compose/releases/download/1.13.0/docker-compose-`uname -s`-`uname -m` > /home/ubuntu/bin/docker-compose
    - chmod +x /home/ubuntu/bin/docker-compose
  override:
    - sed -i -E "s/#TEST#//g" Dockerfile
    - sed -i -E "s/.git//g" .dockerignore
    - docker volume create --name=osdata
    - docker images --all
    - docker --version
    - docker-compose --version
    - docker-compose -f docker-compose.test.yml build --pull

test:
  pre:
    - docker-compose -f docker-compose.test.yml run -d rserve
    - docker-compose -f docker-compose.test.yml run -d db
    - mkdir -p reports/rspec
    - export CI=true
    - export CIRCLECI=true
    - export OS_SERVER_NUMBER_OF_WORKERS=4
  override:
    - docker-compose -f docker-compose.test.yml run web > reports/rspec/rpec_results.html
    # Need to comment out the stop because circle is complaining about the version of docker. This will be
    # moved to travis soon, so not worrying about it.
    # - docker-compose stop
  post:
    - rsync -av reports/ $CIRCLE_ARTIFACTS/reports/
    # Reset the git checkout to remove the test-based data in the containers and rebuild
    # Rebuild the web container as the env var affects
    - git checkout -- .dockerignore && git checkout -- Dockerfile
    - docker-compose -f docker-compose.test.yml build --build-arg rails_env=docker --build-arg bundle_args="--without development test" web

deployment:
  production:
    branch: [develop, master, nrcan-master]
    commands:
      - source docker/deployment/scripts/circle_deployment.sh


TRAVIS_OS_NAME linux
